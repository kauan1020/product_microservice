apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-local
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-local
  template:
    metadata:
      labels:
        app: mongodb-local
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-local-credentials
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-local-credentials
              key: password
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongodb-local-credentials
              key: database
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
      volumes:
      - name: mongodb-data
        emptyDir: {}  # Para um ambiente de produção, você usaria um PersistentVolume
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-local
  namespace: microservices
spec:
  selector:
    app: mongodb-local
  ports:
  - port: 27017
    targetPort: 27017
  type: ClusterIP